from dna_toolkit import *
import random

# random_seq = "".join([random.choice(Neuclotides) for neu in range(50)])

random_seq = "ACGCGTTAATGCACGCTTTGGTATTCGTAAAACTTAACCAATGGTGAGACGCAGATCAGAGACAGTGTATTCGGCATGTTTCGGGCTACGGCGTGAGAAAGTGCCCAGCACTTCATTATAAAATCCACTCTCGTGCTTCCGCCGGTGTAGTCCGAGATCCTCGAAACCTTATGATAACGGTTGGGAGCCCTGCTCTACATTCCGTTAAGGGCAACTATAGATCGGCTGCAGCACGCCCTGGAAACGGTGTCTACCACTGCTTCTTCTCGAATGTACTCTGGCGACCGAAGATTTCCAGCCTCGCTTTGTGGGACTGGGTACCCTAGACGACACATTATTCCTCATGTGGCACAATTTAGAGACTTAGAGAAGCATATGTGCTTAGCTACTTAGGAGTCCACAAACTCTTACACACAGCGTTTCGGGAGGGGAGCTTAGTTCATATTCATAGTCGGTTTTGCAGCTAAAGCACATCGACTTTAGCAGATAGGCGTACGGTGGGGACCGCAGAAACACGCGAGTTTCAAGATTCTGGAAAGCGAATCTAGCCTCCCCATAATTCGACTATGGTACGACGTGCTCAAATGTCAGCAACCAAACCTGGACTTATGGCAAGGTTGCGGATCTGAAAAATTGAAATCCAGATCAATTTTATAGCAGGGGCGGTCAGACAAAAGACAAATGGAAGGCCTCAATTAGCTACCAGTGAGTGCATCCGCACATGTACCACGGGAAAGAATTAAGCCCAAGCTTGATTGGATGTGTTCGTGGTATATGGAATTCTTATCCTAATTTCGAGCCATCCCAGACATTTACGCCCAGGTTAACCTAGTCGACGTAGGCCTGAACCATAATAATGACGAAGCGAGTTTTTTAACCGA"
dna_str = validate_seq(random_seq)
neuclotide_frequency = count_nueclotide_frequency(dna_str)

print(f"Sequence: {dna_str}")
print(f"[1] : Neuclotide Frequency: {neuclotide_frequency}")
print(
    f"[2] : GC Content: {(neuclotide_frequency['G'] + neuclotide_frequency['C'])/sum(list(neuclotide_frequency.values())) * 100}"
)
print(f"[3] : DNA->RNA Transcription: {transcribe(dna_str)}")
print(f"[4] : Reverse Complement: {reverse_complement(dna_str)}")
